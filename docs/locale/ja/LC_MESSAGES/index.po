# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, jspecify
# This file is distributed under the same license as the jspecify package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: jspecify \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-04-02 02:40+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../index.rst:4
msgid "Contents:"
msgstr "コンテンツ:"

#: ../../index.rst:2
msgid "jspecify: Standard Java annotations for static analysis"
msgstr "jspecify: 静的解析のための標準化されたJavaアノテーション"

#: ../../index.rst:9
msgid "Our Goal"
msgstr "私達の目的"

#: ../../index.rst:11
msgid ""
"Java static analysis tools, such as Error Prone and those built into "
"IDEs, have been very successful at enabling automated refactorings and "
"bug prevention. Many of their most beneficial analyses require certain "
"Java annotations (such as ``@Nullable`` or ``@Immutable``) to be present "
"in the source or class file."
msgstr ""
"Error ProneやIDE組み込みツールのようなJava静的解析ツールは、これまでリファクタリング自動化や"
"バグの予防に活用されてきました。こうした利益をもたらす解析の多くは（``@Nullable`` や ``@Immutable`` のような）"
"特定のJavaアノテーションがソースコードまたはクラスファイルに含まれることを前提にしています。"

#: ../../index.rst:14
msgid ""
"Yet for the 15 years since Java annotations were introduced (five years "
"for type-use annotations), users have never had a clear answer for which "
"incarnation of these annotation classes they can safely adopt. Many such "
"artifacts have been created, but there has never been a serious and "
"successful effort to provide a single well-specified standard with "
"industry consensus."
msgstr ""

#: ../../index.rst:17
msgid ""
"The lack of this artifact has constrained the prevalence and overall "
"value of static analysis technology throughout the industry. It has "
"encouraged today's tools to accept a wide variety of annotations, "
"treating them equivalently, which renders the annotation specifications "
"meaningless (an API owner cannot know whether applying a particular "
"annotation is correct without knowing which tool its users will be using "
"to interpret them)."
msgstr ""

#: ../../index.rst:20
msgid ""
"Finally, it complicates interoperation between Java and other JVM "
"languages, which sometimes expect additional API metadata (such as "
"nullability) that the Java language can't express."
msgstr ""

#: ../../index.rst:22
msgid ""
"This missing artifact, with full specifications, is what we are working "
"to create. [1]_"
msgstr ""

#: ../../index.rst:24
msgid ""
"We have seen the xkcd comic. Please do not send us the xkcd comic. We "
"know about the xkcd comic."
msgstr ""

#: ../../index.rst:27
msgid "Participants"
msgstr ""

#: ../../index.rst:29
msgid ""
"People from the following projects and organizations are collaborating on"
" this project:"
msgstr ""

#: ../../index.rst:32
msgid "Project"
msgstr ""

#: ../../index.rst:32
msgid "Organization"
msgstr ""

#: ../../index.rst:34
msgid "`Android <https://www.android.com>`_"
msgstr ""

#: ../../index.rst:34 ../../index.rst:40 ../../index.rst:42
msgid "`Google <https://google.com>`_"
msgstr ""

#: ../../index.rst:36
msgid "`Checker Framework <https://checkerframework.org>`_"
msgstr ""

#: ../../index.rst:38
msgid "`Eclipse IDE <https://www.eclipse.org/ide/>`_"
msgstr ""

#: ../../index.rst:38
msgid "`Eclipse Foundation <https://www.eclipse.org/>`_"
msgstr ""

#: ../../index.rst:40
msgid "`Error Prone <https://errorprone.info>`_"
msgstr ""

#: ../../index.rst:42
msgid "`Guava <https://github.com/google/guava>`_"
msgstr ""

#: ../../index.rst:44
msgid "`IntelliJ IDEA <https://www.jetbrains.com/idea/>`_"
msgstr ""

#: ../../index.rst:44 ../../index.rst:46
msgid "`JetBrains <https://www.jetbrains.com/>`_"
msgstr ""

#: ../../index.rst:46
msgid "`Kotlin <https://kotlinlang.org/>`_"
msgstr ""

#: ../../index.rst:48
msgid "`NullAway <https://github.com/uber/NullAway>`_"
msgstr ""

#: ../../index.rst:48
msgid "`Uber <https://uber.com>`_"
msgstr ""

#: ../../index.rst:50
msgid "`PMD <https://pmd.github.io/>`_"
msgstr ""

#: ../../index.rst:52
msgid "`Spring <https://pivotal.io/spring-app-framework>`_"
msgstr ""

#: ../../index.rst:52
msgid "`Pivotal <https://pivotal.io>`_"
msgstr ""

#: ../../index.rst:54
msgid "`SonarQube <https://www.sonarqube.org/>`_"
msgstr ""

#: ../../index.rst:54
msgid "`SonarSource <https://www.sonarsource.com/>`_"
msgstr ""

#: ../../index.rst:56
msgid "`SpotBugs <http://spotbugs.rtfd.io/>`_"
msgstr ""

#: ../../index.rst:56
msgid "`SpotBugs Team <https://github.com/spotbugs/>`_"
msgstr ""

#: ../../index.rst:58
msgid "`Square <https://squareup.com>`_"
msgstr ""

#: ../../index.rst:62
msgid "Contact Info"
msgstr ""

#: ../../index.rst:64
msgid "Email the group at <jspecify-dev@googlegroups.com>."
msgstr ""

#: ../../index.rst:67
msgid "Indices and tables"
msgstr ""

#: ../../index.rst:69
msgid ":ref:`genindex`"
msgstr ""

#: ../../index.rst:70
msgid ":ref:`modindex`"
msgstr ""

#: ../../index.rst:71
msgid ":ref:`search`"
msgstr ""

#~ msgid ""
#~ "Yet for the 15 years since Java"
#~ " annotations were introduced (five years"
#~ " for type-use annotations), users "
#~ "have never had a clear answer for"
#~ " which incarnation of these annotation "
#~ "classes they can safely adopt. Many "
#~ "such artifacts have been created, but"
#~ " there has never been a serious "
#~ "and successful effort to provide a "
#~ "single well-specified standard with "
#~ "industry consensus. The lack of this "
#~ "artifact has constrained the prevalence "
#~ "and overall value of static analysis "
#~ "technology throughout the industry. It "
#~ "has encouraged today's tools to accept"
#~ " a wide variety of annotations, "
#~ "treating them equivalently, which renders "
#~ "the annotation specifications meaningless (an"
#~ " API owner cannot know whether "
#~ "applying a particular annotation is "
#~ "correct without knowing which tool its"
#~ " users will be using to interpret "
#~ "them). Finally, it complicates interoperation"
#~ " between Java and other JVM "
#~ "languages, which sometimes expect additional"
#~ " API metadata (such as nullability) "
#~ "that the Java language can't express."
#~ msgstr ""

